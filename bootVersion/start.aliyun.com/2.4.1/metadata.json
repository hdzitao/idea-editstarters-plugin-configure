{
  "_links": {
    "maven-project": {
      "href": "http://start.aliyun.com/starter.zip?type=maven-project{&dependencies,packaging,javaVersion,language,bootVersion,groupId,artifactId,version,name,description,packageName,architecture}",
      "templated": true
    },
    "maven-build": {
      "href": "http://start.aliyun.com/pom.xml?type=maven-build{&dependencies,packaging,javaVersion,language,bootVersion,groupId,artifactId,version,name,description,packageName,architecture}",
      "templated": true
    },
    "gradle-project": {
      "href": "http://start.aliyun.com/starter.zip?type=gradle-project{&dependencies,packaging,javaVersion,language,bootVersion,groupId,artifactId,version,name,description,packageName,architecture}",
      "templated": true
    },
    "gradle-build": {
      "href": "http://start.aliyun.com/build.gradle?type=gradle-build{&dependencies,packaging,javaVersion,language,bootVersion,groupId,artifactId,version,name,description,packageName,architecture}",
      "templated": true
    },
    "dependencies": {
      "href": "http://start.aliyun.com/dependencies{?bootVersion}",
      "templated": true
    }
  },
  "dependencies": {
    "type": "hierarchical-multi-select",
    "values": [
      {
        "name": "Alibaba Cloud",
        "values": [
          {
            "id": "sca-rds",
            "name": "Alibaba Cloud RDS",
            "description": "阿里云关系型数据库RDS（Relational Database Service）是一种稳定可靠、可弹性伸缩的在线数据库服务，提供容灾、备份、恢复、迁移等方面的全套解决方案，彻底解决数据库运维的烦恼。",
            "_links": {
              "reference": {
                "href": "https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-rds-spring-boot-sample"
              }
            }
          },
          {
            "id": "sca-redis",
            "name": "Alibaba Cloud Redis",
            "description": "高可靠双机热备架构及可无缝扩展的集群架构，满足高读写性能场景及容量需弹性变配的业务需求。",
            "_links": {
              "reference": {
                "href": "https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-redis-spring-boot-sample"
              }
            }
          },
          {
            "id": "sca-oss",
            "name": "Alibaba Cloud OSS",
            "description": "阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务.",
            "_links": {
              "reference": {
                "href": "https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-oss-spring-boot-sample"
              }
            }
          },
          {
            "id": "sca-sms",
            "name": "Alibaba Cloud SMS",
            "description": "覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道.",
            "_links": {
              "reference": {
                "href": "https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-sms-spring-boot-sample"
              }
            }
          },
          {
            "id": "sca-schedulerx",
            "name": "Alibaba Cloud SchedulerX",
            "description": "阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时任务调度服务.",
            "_links": {
              "reference": {
                "href": "https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-schedulerx-spring-boot-sample"
              }
            }
          }
        ]
      },
      {
        "name": "Spring Cloud Alibaba",
        "values": [
          {
            "id": "sca-dubbo",
            "name": "Spring Cloud Alibaba Dubbo",
            "description": "Apache Dubbo 是一款高性能 Java RPC 框架.",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]",
            "_links": {
              "guide": {
                "href": "https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_dubbo"
              },
              "reference": {
                "href": "https://github.com/alibaba/spring-cloud-alibaba/tree/master/spring-cloud-alibaba-examples/spring-cloud-alibaba-dubbo-examples"
              }
            }
          },
          {
            "id": "sca-nacos-discovery",
            "name": "Nacos Service Discovery",
            "description": "通过nacos实现的服务发现平台.",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]",
            "_links": {
              "reference": {
                "href": "https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_nacos_discovery"
              },
              "guide": {
                "href": "https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-examples/nacos-example/nacos-discovery-example/readme.md",
                "title": "Nacos Service Discovery Example"
              }
            }
          },
          {
            "id": "sca-sentinel",
            "name": "Spring Cloud Alibaba Sentinel",
            "description": "提供 Sentinel 自动接入和配置支持，提供 Spring Web/WebFlux、Feign、RestTemplate、注解等适配",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]",
            "_links": {
              "reference": {
                "href": "https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_sentinel"
              },
              "guide": {
                "href": "https://github.com/alibaba/spring-cloud-alibaba/tree/master/spring-cloud-alibaba-examples/sentinel-example/sentinel-core-example",
                "title": "Sentinel Example"
              }
            }
          },
          {
            "id": "sca-sentinel-datasource",
            "name": "Spring Cloud Alibaba Sentinel DataSource",
            "description": "提供 Sentinel 动态数据源接入支持，方便用户整合 Nacos 等数据源动态管理规则",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]"
          },
          {
            "id": "sca-sentinel-dubbo-adapter",
            "name": "Spring Cloud Alibaba Sentinel Dubbo Adapter",
            "description": "提供 Sentinel 对 Dubbo 的适配能力",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]"
          },
          {
            "id": "sca-sentinel-gateway",
            "name": "Spring Cloud Alibaba Sentinel Gateway",
            "description": "提供 Sentinel 网关流控自动接入支持，目前支持 Spring Cloud Gateway 和 Zuul",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]"
          },
          {
            "id": "sca-seata",
            "name": "Spring Cloud Alibaba Seata",
            "description": "阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案.",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]"
          },
          {
            "id": "sca-rocketmq",
            "name": "Spring Cloud Alibaba RocketMQ",
            "description": "一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务.",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]",
            "_links": {
              "reference": {
                "href": "https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc-zh/rocketmq.adoc"
              },
              "guide": {
                "href": "https://help.aliyun.com/product/29530.html",
                "title": "RocketMQ 文档首页"
              },
              "WebConsole": {
                "href": "https://ons.console.aliyun.com",
                "title": "RocketMQ Web 控制台"
              }
            }
          },
          {
            "id": "sca-nacos-config",
            "name": "Nacos Configuration",
            "description": "通过Alibaba Nacos实现配置管理：支持分布式系统中的外部化配置、配置更改时自动刷新功能",
            "versionRange": "[2.0.0.RELEASE,2.3.7.RELEASE]",
            "_links": {
              "reference": {
                "href": "https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_nacos_config"
              },
              "guide": {
                "href": "https://github.com/alibaba/spring-cloud-alibaba/tree/master/spring-cloud-alibaba-examples/nacos-example/nacos-config-example",
                "title": "Nacos Configuration Example"
              }
            }
          }
        ]
      },
      {
        "name": "开发工具",
        "values": [
          {
            "id": "arthas",
            "name": "Arthas",
            "description": "Arthas 是Alibaba开源的Java诊断工具，允许开发者在不修改代码或重启服务器的基础上，实现Java应用程序的运行时诊断，深受开发者喜爱；",
            "_links": {
              "reference": {
                "href": "https://arthas.gitee.io/index.html"
              }
            }
          },
          {
            "id": "devtools",
            "name": "Spring Boot DevTools",
            "description": "提供快速的应用程序重启、重启、配置，以增强开发体验。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#using-boot-devtools",
                "templated": true
              }
            }
          },
          {
            "id": "lombok",
            "name": "Lombok",
            "description": "有助于减少样板代码的Java注释库。"
          },
          {
            "id": "configuration-processor",
            "name": "Spring Configuration Processor",
            "description": "生成元数据 供开发人员在使用自定义配置键（例如，application.properties / .yml文件）时提供上下文帮助和“代码补全”。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#configuration-metadata-annotation-processor",
                "templated": true
              }
            }
          }
        ]
      },
      {
        "name": "Web",
        "values": [
          {
            "id": "web",
            "name": "Spring Web",
            "description": "使用Spring MVC构建Web（包括RESTful）应用程序。 使用Apache Tomcat作为默认的嵌入式容器。",
            "_links": {
              "guide": [
                {
                  "href": "https://spring.io/guides/gs/rest-service/",
                  "title": "Building a RESTful Web Service"
                },
                {
                  "href": "https://spring.io/guides/gs/serving-web-content/",
                  "title": "Serving Web Content with Spring MVC"
                },
                {
                  "href": "https://spring.io/guides/tutorials/bookmarks/",
                  "title": "Building REST services with Spring"
                }
              ],
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-developing-web-applications",
                "templated": true
              }
            }
          },
          {
            "id": "webflux",
            "name": "Spring Reactive Web",
            "description": "使用Spring WebFlux和Netty构建响应式Web应用程序。"
          },
          {
            "id": "data-rest",
            "name": "Rest Repositories",
            "description": "使用 Spring Data REST 以 REST 形式暴露 Spring Data 存储库。",
            "_links": {
              "guide": [
                {
                  "href": "https://spring.io/guides/gs/accessing-data-rest/",
                  "title": "Accessing JPA Data with REST"
                },
                {
                  "href": "https://spring.io/guides/gs/accessing-neo4j-data-rest/",
                  "title": "Accessing Neo4j Data with REST"
                },
                {
                  "href": "https://spring.io/guides/gs/accessing-mongodb-data-rest/",
                  "title": "Accessing MongoDB Data with REST"
                }
              ],
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-use-exposing-spring-data-repositories-rest-endpoint",
                "templated": true
              }
            }
          },
          {
            "id": "session",
            "name": "Spring Session",
            "description": "提供用于管理用户会话信息的API和实现。"
          },
          {
            "id": "data-rest-explorer",
            "name": "Rest Repositories HAL Explorer",
            "description": "Browsing Spring Data REST repositories in your browser.",
            "versionRange": "2.2.0.M1"
          },
          {
            "id": "data-rest-hal",
            "name": "Rest Repositories HAL Browser",
            "description": "在浏览器中浏览 Spring Data REST 仓库。",
            "versionRange": "[2.0.0.RELEASE,2.2.0.M1)"
          },
          {
            "id": "hateoas",
            "name": "Spring HATEOAS",
            "description": "在使用Spring / Spring MVC时，轻松创建遵循HATEOAS原理的RESTful API。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/rest-hateoas/",
                "title": "Building a Hypermedia-Driven RESTful Web Service"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-hateoas",
                "templated": true
              }
            }
          },
          {
            "id": "web-services",
            "name": "Spring Web Services",
            "description": "促进约定优先的SOAP开发。允许使用多种操作XML有效负载的方式之一来创建灵活的Web服务。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/producing-web-service/",
                "title": "Producing a SOAP web service"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-webservices",
                "templated": true
              }
            }
          },
          {
            "id": "jersey",
            "name": "Jersey",
            "description": "用Java开发RESTful Web服务的框架，该框架提供对JAX-RS API的支持。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jersey",
                "templated": true
              }
            }
          },
          {
            "id": "vaadin",
            "name": "Vaadin",
            "description": "Java框架，用于基于Web组件构建富客户端应用程序。",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/crud-with-vaadin/",
                "title": "Creating CRUD UI with Vaadin"
              },
              "reference": {
                "href": "https://vaadin.com/spring"
              }
            }
          }
        ]
      },
      {
        "name": "模板引擎",
        "values": [
          {
            "id": "thymeleaf",
            "name": "Thymeleaf",
            "description": "适用于Web和独立环境的现代服务器端Java模板引擎。允许HTML在浏览器中正确显示为静态原型。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/handling-form-submission/",
                "title": "Handling Form Submission"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines",
                "templated": true
              }
            }
          },
          {
            "id": "freemarker",
            "name": "Apache Freemarker",
            "description": "用于根据模板和更改的数据生成文本输出（HTML网页，电子邮件，配置文件，源代码等）的Java库。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines",
                "templated": true
              }
            }
          },
          {
            "id": "mustache",
            "name": "Mustache",
            "description": "无逻辑的模板。没有if语句，else子句或for循环。 相反，只有标签。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines",
                "templated": true
              }
            }
          },
          {
            "id": "groovy-templates",
            "name": "Groovy Templates",
            "description": "Groovy模板引擎。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-spring-mvc-template-engines",
                "templated": true
              }
            }
          }
        ]
      },
      {
        "name": "安全",
        "values": [
          {
            "id": "security",
            "name": "Spring Security",
            "description": "用于Spring应用程序的高度可定制的身份验证和访问控制框架。",
            "_links": {
              "guide": [
                {
                  "href": "https://spring.io/guides/gs/securing-web/",
                  "title": "Securing a Web Application"
                },
                {
                  "href": "https://spring.io/guides/tutorials/spring-boot-oauth2/",
                  "title": "Spring Boot and OAuth2"
                },
                {
                  "href": "https://spring.io/guides/gs/authenticating-ldap/",
                  "title": "Authenticating a User with LDAP"
                }
              ],
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-security",
                "templated": true
              }
            }
          },
          {
            "id": "oauth2-client",
            "name": "OAuth2 Client",
            "description": "用于 Spring Security 的 OAuth2/OpenID Connect 客户端功能的 Spring Boot 集成。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-security-oauth2-client",
                "templated": true
              }
            }
          },
          {
            "id": "oauth2-resource-server",
            "name": "OAuth2 Resource Server",
            "description": "用于Spring Security的OAuth2资源服务器功能的Spring Boot集成。",
            "versionRange": "2.1.0.M2",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-security-oauth2-server",
                "templated": true
              }
            }
          },
          {
            "id": "data-ldap",
            "name": "Spring LDAP",
            "description": "令使用轻量级目录访问协议的基于Spring的应用程序的构建更加容易。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-ldap",
                "templated": true
              }
            }
          },
          {
            "id": "okta",
            "name": "Okta",
            "description": "Okta 特定于 Spring Security/Spring Boot OAuth2 功能的配置。使您的Spring Boot应用程序能够通过 OAuth 2.0/OIDC 与 Okta 一起使用。",
            "versionRange": "[2.1.2.RELEASE,2.5.0.M1)",
            "_links": {
              "guide": [
                {
                  "href": "https://github.com/okta/samples-java-spring/tree/master/okta-hosted-login",
                  "title": "Okta-Hosted Login Page Example"
                },
                {
                  "href": "https://github.com/okta/samples-java-spring/tree/master/custom-login",
                  "title": "Custom Login Page Example"
                },
                {
                  "href": "https://github.com/okta/samples-java-spring/tree/master/resource-server",
                  "title": "Okta Spring Security Resource Server Example"
                }
              ],
              "reference": {
                "href": "https://github.com/okta/okta-spring-boot#readme",
                "title": "Okta Spring Boot documentation"
              }
            }
          }
        ]
      },
      {
        "name": "关系型数据库",
        "values": [
          {
            "id": "jdbc",
            "name": "JDBC API",
            "description": "数据库连接API，定义客户端如何连接和查询数据库。",
            "_links": {
              "guide": [
                {
                  "href": "https://spring.io/guides/gs/relational-data-access/",
                  "title": "Accessing Relational Data using JDBC with Spring"
                },
                {
                  "href": "https://spring.io/guides/gs/managing-transactions/",
                  "title": "Managing Transactions"
                }
              ],
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-sql",
                "templated": true
              }
            }
          },
          {
            "id": "data-jpa",
            "name": "Spring Data JPA",
            "description": "通过 Java Persistence API 使用 Spring Data 和 Hibernate 在SQL存储中持久存储数据。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/accessing-data-jpa/",
                "title": "Accessing Data with JPA"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jpa-and-spring-data",
                "templated": true
              }
            }
          },
          {
            "id": "data-jdbc",
            "name": "Spring Data JDBC",
            "description": "使用Spring Data时，通过纯JDBC在SQL存储中持久存储数据。",
            "versionRange": "2.1.0.RELEASE",
            "_links": {
              "guide": {
                "href": "https://github.com/spring-projects/spring-data-examples/tree/master/jdbc/basics",
                "title": "Using Spring Data JDBC"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/"
              }
            }
          },
          {
            "id": "data-r2dbc",
            "name": "Spring Data R2DBC",
            "description": "提供响应式关系数据库连接，以在响应式应用程序中使用Spring Data将数据存储在SQL存储中。",
            "versionRange": "2.3.0.M3",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/accessing-data-r2dbc/",
                "title": "Acessing data with R2DBC"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/spring-boot-features.html#boot-features-r2dbc",
                "templated": true
              },
              "home": {
                "href": "https://r2dbc.io",
                "title": "R2DBC Homepage"
              }
            }
          },
          {
            "id": "mybatis",
            "name": "MyBatis Framework",
            "description": "持久性框架，支持自定义SQL，存储过程和高级映射。 MyBatis使用XML描述符或注释将对象与存储过程或SQL语句耦合。",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "guide": {
                "href": "https://github.com/mybatis/spring-boot-starter/wiki/Quick-Start",
                "title": "MyBatis Quick Start"
              },
              "reference": {
                "href": "https://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/"
              }
            }
          },
          {
            "id": "mybatis-plus",
            "name": "MyBatis Plus Framework",
            "description": "MyBatis-Plus (opens new window)（简称 MP）是一个 MyBatis (opens new window)的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。",
            "versionRange": "[2.0.0.RELEASE,2.4.4]",
            "_links": {
              "guide": {
                "href": "https://baomidou.com/en/guide/",
                "title": "MyBatis Plus Official"
              }
            }
          },
          {
            "id": "liquibase",
            "name": "Liquibase Migration",
            "description": "Liquibase数据库迁移和源代码控制库。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-execute-liquibase-database-migrations-on-startup",
                "templated": true
              }
            }
          },
          {
            "id": "flyway",
            "name": "Flyway Migration",
            "description": "数据库的版本控制，您可以从任何版本（包括空数据库）迁移到架构的最新版本。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-execute-flyway-database-migrations-on-startup",
                "templated": true
              }
            }
          },
          {
            "id": "jooq",
            "name": "JOOQ Access Layer",
            "description": "从数据库中生成Java代码，并通过流畅的API构建类型安全的SQL查询。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-jooq",
                "templated": true
              }
            }
          },
          {
            "id": "db2",
            "name": "IBM DB2 Driver",
            "description": "提供对IBM DB2的访问的JDBC驱动程序。",
            "versionRange": "2.2.0.M6"
          },
          {
            "id": "derby",
            "name": "Apache Derby Database",
            "description": "一个完全用Java实现的开源关系数据库。"
          },
          {
            "id": "h2",
            "name": "H2 Database",
            "description": "提供一个快速的内存数据库，该数据库支持JDBC API和R2DBC访问，并且占用空间很小（2mb）。 支持嵌入式和服务器模式以及基于浏览器的控制台应用程序。"
          },
          {
            "id": "hsql",
            "name": "HyperSQL Database",
            "description": "轻量级 100％ Java SQL 数据库引擎。"
          },
          {
            "id": "mariadb",
            "name": "MariaDB Driver",
            "description": "MariaDB JDBC and R2DBC driver."
          },
          {
            "id": "sqlserver",
            "name": "MS SQL Server Driver",
            "description": "JDBC和R2DBC驱动程序，可从任何Java应用程序访问Microsoft SQL Server和Azure SQL数据库。"
          },
          {
            "id": "mysql",
            "name": "MySQL Driver",
            "description": "MySQL JDBC和R2DBC驱动程序。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/accessing-data-mysql/",
                "title": "Accessing data with MySQL"
              }
            }
          },
          {
            "id": "oracle",
            "name": "Oracle Driver",
            "description": "提供对Oracle的访问的JDBC驱动程序。",
            "versionRange": "2.2.0.RC1"
          },
          {
            "id": "postgresql",
            "name": "PostgreSQL Driver",
            "description": "JDBC和R2DBC驱动程序，允许Java程序使用标准的，独立于数据库的Java代码连接到PostgreSQL数据库。"
          }
        ]
      },
      {
        "name": "非关系型数据库",
        "values": [
          {
            "id": "data-redis",
            "name": "Spring Data Redis (Access+Driver)",
            "description": "先进且线程安全的Java Redis客户端，用于同步，异步和反应式使用。 支持群集，前哨，流水线，自动重新连接，编解码器等。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/messaging-redis/",
                "title": "Messaging with Redis"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-redis",
                "templated": true
              }
            }
          },
          {
            "id": "data-redis-reactive",
            "name": "Spring Data Reactive Redis",
            "description": "使用Spring Data Redis以响应方式访问Redis键值数据存储。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/messaging-redis/",
                "title": "Messaging with Redis"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-redis",
                "templated": true
              }
            }
          },
          {
            "id": "data-mongodb",
            "name": "Spring Data MongoDB",
            "description": "将数据存储在灵活的，类似于JSON的文档中，这意味着字段随文档的不同而不同，并且数据结构可以随时间而变化。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/accessing-data-mongodb/",
                "title": "Accessing Data with MongoDB"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-mongodb",
                "templated": true
              }
            }
          },
          {
            "id": "data-mongodb-reactive",
            "name": "Spring Data Reactive MongoDB",
            "description": "为MongoDB提供具有无阻塞背压的异步流处理。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-mongodb",
                "templated": true
              }
            }
          },
          {
            "id": "data-elasticsearch",
            "name": "Spring Data Elasticsearch (Access+Driver)",
            "description": "带有Spring Data Elasticsearch的分布式RESTful搜索和分析引擎。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-elasticsearch",
                "templated": true
              }
            }
          },
          {
            "id": "data-solr",
            "name": "Spring Data for Apache Solr",
            "description": "Apache Solr是基于Apache Lucene构建的开源企业搜索平台。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-solr",
                "templated": true
              }
            }
          },
          {
            "id": "data-cassandra",
            "name": "Spring Data for Apache Cassandra",
            "description": "一个免费的开源NoSQL分布式数据库管理系统，可提供高可伸缩性和高性能。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-cassandra",
                "templated": true
              }
            }
          },
          {
            "id": "data-cassandra-reactive",
            "name": "Spring Data Reactive for Apache Cassandra",
            "description": "以反应方式访问Cassandra NoSQL数据库。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-cassandra",
                "templated": true
              }
            }
          },
          {
            "id": "geode",
            "name": "Spring for Apache Geode",
            "description": "Apache Geode is a data management platform that helps users build real-time, highly concurrent, highly performant and reliable Spring Boot applications at scale that is compatible with Pivotal Cloud Cache.",
            "versionRange": "2.2.0.M5",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/"
              },
              "guide": {
                "href": "https://github.com/spring-projects/spring-boot-data-geode/tree/master/spring-geode-samples",
                "title": "Using Spring for Apache Geode"
              },
              "other": {
                "href": "https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/#geode-gemfire-switch",
                "title": "Switch from Apache Geode to Pivotal Cloud Cache"
              }
            }
          },
          {
            "id": "data-couchbase",
            "name": "Spring Data Couchbase",
            "description": "NoSQL面向文档的数据库，提供内存优先的体系结构，地理分布的部署和工作负载隔离。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-couchbase",
                "templated": true
              }
            }
          },
          {
            "id": "data-couchbase-reactive",
            "name": "Spring Data Reactive Couchbase",
            "description": "使用Spring Data Couchbase以响应方式访问Couchbase NoSQL数据库。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-couchbase",
                "templated": true
              }
            }
          },
          {
            "id": "data-neo4j",
            "name": "Spring Data Neo4j",
            "description": "一个开放源代码NoSQL数据库，该数据库存储结构化为图形的数据，这些图形由通过关系连接的节点组成。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/accessing-data-neo4j/",
                "title": "Accessing Data with Neo4j"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-neo4j",
                "templated": true
              }
            }
          }
        ]
      },
      {
        "name": "消息",
        "values": [
          {
            "id": "integration",
            "name": "Spring Integration",
            "description": "添加了对企业集成模式的支持。 支持轻量级消息传递，并通过声明性适配器支持与外部系统的集成。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/integration/",
                "title": "Integrating Data"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-integration",
                "templated": true
              }
            }
          },
          {
            "id": "amqp",
            "name": "Spring for RabbitMQ",
            "description": "为您的应用程序提供一个发送和接收消息的通用平台，并使您的消息成为一个安全的生存环境，直到收到消息为止。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/messaging-rabbitmq/",
                "title": "Messaging with RabbitMQ"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-amqp",
                "templated": true
              }
            }
          },
          {
            "id": "kafka",
            "name": "Spring for Apache Kafka",
            "description": "发布，订阅，存储和处理记录流。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-kafka",
                "templated": true
              }
            }
          },
          {
            "id": "kafka-streams",
            "name": "Spring for Apache Kafka Streams",
            "description": "使用Apache Kafka Streams构建流处理应用程序。",
            "_links": {
              "guide": {
                "href": "https://github.com/spring-cloud/spring-cloud-stream-samples/tree/master/kafka-streams-samples",
                "title": "Samples for using Apache Kafka Streams with Spring Cloud stream"
              },
              "reference": [
                {
                  "href": "https://docs.spring.io/spring-kafka/docs/current/reference/html/_reference.html#kafka-streams",
                  "title": "Apache Kafka Streams Support"
                },
                {
                  "href": "https://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/#_kafka_streams_binding_capabilities_of_spring_cloud_stream",
                  "title": "Apache Kafka Streams Binding Capabilities of Spring Cloud Stream"
                }
              ]
            }
          },
          {
            "id": "activemq",
            "name": "Spring for Apache ActiveMQ 5",
            "description": "带有 Apache ActiveMQ 'Classic' 模式的 Spring JMS 支持。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/messaging-jms/",
                "title": "Java Message Service API via Apache ActiveMQ Classic."
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-activemq",
                "templated": true
              }
            }
          },
          {
            "id": "artemis",
            "name": "Spring for Apache ActiveMQ Artemis",
            "description": "带有 Apache ActiveMQ 'Artemis' 模式的 Spring JMS 支持。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/messaging-jms/",
                "title": "Messaging with JMS"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-artemis",
                "templated": true
              }
            }
          },
          {
            "id": "websocket",
            "name": "WebSocket",
            "description": "使用SockJS和STOMP构建WebSocket应用程序。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/messaging-stomp-websocket/",
                "title": "Using WebSocket to build an interactive web application"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-websockets",
                "templated": true
              }
            }
          },
          {
            "id": "rsocket",
            "name": "RSocket",
            "description": "带有Spring Messaging和Netty的RSocket.io应用程序。",
            "versionRange": "2.2.0.M2"
          },
          {
            "id": "camel",
            "name": "Apache Camel",
            "description": "Apache Camel是一个开源集成框架，可让您快速轻松地集成使用或生成数据的各种系统。",
            "versionRange": "[2.0.0.M1,2.4.0.M1)",
            "_links": {
              "guide": {
                "href": "https://camel.apache.org/camel-spring-boot/latest/spring-boot.html",
                "title": "Using Apache Camel with Spring Boot"
              }
            }
          },
          {
            "id": "solace",
            "name": "Solace PubSub+",
            "description": "连接到Solace PubSub+ Advanced Event Broker以发布，订阅，请求/答复以及存储/重播消息",
            "versionRange": "[2.2.0.RELEASE,2.5.0.M1)",
            "_links": {
              "reference": [
                {
                  "href": "https://www.solace.dev/start-spring-io-help/",
                  "title": "Getting started with Solace and Spring"
                },
                {
                  "href": "https://solace.dev",
                  "title": "Solace Developer Portal"
                }
              ]
            }
          }
        ]
      },
      {
        "name": "输入/输出",
        "values": [
          {
            "id": "batch",
            "name": "Spring Batch",
            "description": "批处理应用程序,具有事务、重试/跳过和基于块的处理。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/batch-processing/",
                "title": "Creating a Batch Service"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#howto-batch-applications",
                "templated": true
              }
            }
          },
          {
            "id": "validation",
            "name": "Validation",
            "description": "使用Hibernate验证程序进行JSR-303验证。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-validation",
                "templated": true
              }
            }
          },
          {
            "id": "mail",
            "name": "Java Mail Sender",
            "description": "使用Java Mail和Spring Framework的JavaMailSender发送电子邮件。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-email",
                "templated": true
              }
            }
          },
          {
            "id": "quartz",
            "name": "Quartz Scheduler",
            "description": "使用Quartz调度作业。"
          },
          {
            "id": "cache",
            "name": "Spring cache abstraction",
            "description": "提供与缓存有关的操作，例如更新缓存内容的能力，但不提供实际的数据存储。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/caching/",
                "title": "Caching Data with Spring"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#boot-features-caching",
                "templated": true
              }
            }
          }
        ]
      },
      {
        "name": "Ops",
        "values": [
          {
            "id": "actuator",
            "name": "Spring Boot Actuator",
            "description": "支持内置（或自定义）端点，使您可以监视和管理应用程序-例如应用程序运行状况，指标，会话等。",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/actuator-service/",
                "title": "Building a RESTful Web Service with Spring Boot Actuator"
              },
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/htmlsingle/#production-ready",
                "templated": true
              }
            }
          },
          {
            "id": "codecentric-spring-boot-admin-client",
            "name": "Codecentric's Spring Boot Admin (Client)",
            "description": "应用程序向Spring Boot Admin Server实例注册所必要依赖。",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "reference": {
                "href": "https://codecentric.github.io/spring-boot-admin/current/#getting-started"
              }
            }
          },
          {
            "id": "codecentric-spring-boot-admin-server",
            "name": "Codecentric's Spring Boot Admin (Server)",
            "description": "一个社区项目，用于管理和监视您的Spring Boot应用程序。 在Spring Boot Actuator端点的顶部提供一个UI。",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "reference": {
                "href": "https://codecentric.github.io/spring-boot-admin/current/#getting-started"
              }
            }
          }
        ]
      },
      {
        "name": "观测",
        "values": [
          {
            "id": "datadog",
            "name": "Datadog",
            "description": "Datadog是具有内置仪表板和警报功能的维度时间序列SAAS。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-datadog",
                "templated": true
              }
            }
          },
          {
            "id": "influx",
            "name": "Influx",
            "description": "支持实时流处理和时间序列数据的存储。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-influx",
                "templated": true
              }
            }
          },
          {
            "id": "graphite",
            "name": "Graphite",
            "description": "由固定大小的数据库支持的分层度量标准系统。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-graphite",
                "templated": true
              }
            }
          },
          {
            "id": "new-relic",
            "name": "New Relic",
            "description": "具有完整UI和称为NRQL的查询语言的SaaS产品。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-new-relic",
                "templated": true
              }
            }
          },
          {
            "id": "prometheus",
            "name": "Prometheus",
            "description": "具有简单内置UI，自定义查询语言和数学运算的内存中维时间序列数据库。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/production-ready-features.html#production-ready-metrics-export-prometheus",
                "templated": true
              }
            }
          },
          {
            "id": "wavefront",
            "name": "Wavefront",
            "description": "Wavefront的Tanzu Observability是基于SaaS的指标监视和分析平台，可让您可视化，查询和警告整个堆栈中的数据（基础结构，网络，自定义应用程序指标，业务KPI等）。",
            "versionRange": "2.1.0.RELEASE",
            "_links": {
              "reference": [
                {
                  "href": "https://docs.wavefront.com/wavefront_springboot.html",
                  "title": "Wavefront for Spring Boot documentation"
                },
                {
                  "href": "https://github.com/wavefrontHQ/wavefront-spring-boot",
                  "title": "Wavefront for Spring Boot repository"
                }
              ]
            }
          }
        ]
      },
      {
        "name": "测试",
        "values": [
          {
            "id": "restdocs",
            "name": "Spring REST Docs",
            "description": "通过结合使用Asciidoctor手写和通过Spring MVC Test自动生成的代码片段来记录RESTful服务。"
          },
          {
            "id": "testcontainers",
            "name": "Testcontainers",
            "description": "Provide lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.",
            "_links": {
              "reference": {
                "href": "https://www.testcontainers.org/"
              }
            }
          },
          {
            "id": "cloud-contract-verifier",
            "name": "Contract Verifier",
            "description": "通过启用“消费者驱动合同”（CDC）开发，将TDD升级到软件体系结构级别。",
            "_links": {
              "guide": {
                "href": "https://cloud.spring.io/spring-cloud-contract/spring-cloud-contract.html#_spring_cloud_contract_verifier_setup",
                "title": "Spring Cloud Contract Verifier Setup"
              }
            }
          },
          {
            "id": "cloud-contract-stub-runner",
            "name": "Contract Stub Runner",
            "description": "Stub Runner，用于基于 HTTP/消息 传递的通信。允许通过RestDocs测试创建WireMock存根。"
          },
          {
            "id": "unboundid-ldap",
            "name": "Embedded LDAP Server",
            "description": "提供在单元测试中运行LDAP服务器的平台无关的方法。",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-boot/docs/{bootVersion}/reference/html/boot-features-nosql.html#boot-features-ldap-embedded",
                "templated": true
              }
            }
          },
          {
            "id": "flapdoodle-mongo",
            "name": "Embedded MongoDB Database",
            "description": "提供在平台测试中运行MongoDB的平台无关的方法。"
          },
          {
            "id": "junit",
            "name": "Junit",
            "description": "Java语言的单元测试框架"
          }
        ]
      },
      {
        "name": "架构",
        "values": [
          {
            "id": "cola-core",
            "name": "cola-core",
            "description": "COLA 框架的核心库"
          },
          {
            "id": "cola-common",
            "name": "cola-common",
            "description": "COLA 框架通用组件"
          },
          {
            "id": "cola-framework-archetype-web",
            "name": "cola-framework-archetype-web",
            "description": "COLA框架WEB层"
          },
          {
            "id": "cola-framework-archetype-service",
            "name": "cola-framework-archetype-service",
            "description": "COLA框架服务"
          },
          {
            "id": "cola-component-exception",
            "name": "cola-component-exception",
            "description": "定义了异常格式，主要有BizException和SysException"
          },
          {
            "id": "cola-component-dto",
            "name": "cola-component-dto",
            "description": "定义了DTO格式，包括分页"
          },
          {
            "id": "cola-component-domain-starter",
            "name": "cola-component-domain-starter",
            "description": "Spring托管的领域实体组件"
          },
          {
            "id": "cola-component-catchlog-starter",
            "name": "cola-component-catchlog-starter",
            "description": "异常处理和日志组件"
          },
          {
            "id": "cola-component-extension-starter",
            "name": "cola-component-extension-starter",
            "description": "扩展点组件"
          },
          {
            "id": "cola-component-statemachine",
            "name": "cola-component-statemachine",
            "description": "状态机组件"
          },
          {
            "id": "cola-component-test-container",
            "name": "cola-component-test-container",
            "description": "组件测试容器"
          }
        ]
      },
      {
        "name": "杂项",
        "values": [
          {
            "id": "fastjson",
            "name": "Fastjson",
            "description": "Fastjson 是一个 Java 库，可以将 Java 对象转换为 JSON 格式，当然它也可以将 JSON 字符串转换为 Java 对象"
          },
          {
            "id": "commons-lang3",
            "name": "Apache Commons Lang",
            "description": "Java实用程序类的软件包，用于java.lang的层次结构中的类，或者被认为是标准的以证明存在于java.lang中。"
          },
          {
            "id": "gson",
            "name": "Gson",
            "description": "Gson 是一个 Google 开发的序列化库，可以将 Java 对象转换为 JSON 格式，当然它也可以将 JSON 字符串转换为 Java 对象"
          },
          {
            "id": "commons-io",
            "name": "Commons-io",
            "description": "Commons IO is a library of utilities to assist with developing IO functionality."
          },
          {
            "id": "root-starter",
            "name": "root-starter",
            "description": "Root starter of Spring Boot."
          }
        ]
      },
      {
        "name": "Spring Cloud",
        "values": [
          {
            "id": "cloud-starter",
            "name": "Cloud Bootstrap",
            "description": "Non-specific Spring Cloud features, unrelated to external libraries or integrations (e.g. Bootstrap context and @RefreshScope).",
            "_links": {
              "reference": {
                "href": "https://spring.io/projects/spring-cloud-commons"
              }
            }
          },
          {
            "id": "cloud-function",
            "name": "Function",
            "description": "Promotes the implementation of business logic via functions and supports a uniform programming model across serverless providers, as well as the ability to run standalone (locally or in a PaaS).",
            "_links": {
              "reference": {
                "href": "https://cloud.spring.io/spring-cloud-function/"
              },
              "sample": {
                "href": "https://github.com/spring-cloud/spring-cloud-function/tree/master/spring-cloud-function-samples",
                "title": "Various sample apps using Spring Cloud Function"
              }
            }
          },
          {
            "id": "cloud-task",
            "name": "Task",
            "description": "Allows a user to develop and run short lived microservices using Spring Cloud. Run them locally, in the cloud, and on Spring Cloud Data Flow."
          }
        ]
      },
      {
        "name": "Spring Cloud Security",
        "values": [
          {
            "id": "cloud-security",
            "name": "Cloud Security",
            "description": "A declarative model which can be heavily configured externally (or centrally) lends itself to the implementation of large systems of co-operating, remote components, usually with a central indentity management service."
          },
          {
            "id": "cloud-oauth2",
            "name": "Cloud OAuth2",
            "description": "OAuth2 and distributed application patterns with spring-cloud-security."
          }
        ]
      },
      {
        "name": "Spring Cloud Tools",
        "values": [
          {
            "id": "cloud-connectors",
            "name": "Cloud Connectors",
            "description": "Simplifies the process of connecting to services and gaining operating environment awareness in cloud platforms such as Cloud Foundry and Heroku.",
            "versionRange": "[2.0.0.RELEASE,2.3.0.M1)"
          },
          {
            "id": "open-service-broker",
            "name": "Open Service Broker",
            "description": "Framework for building Spring Boot apps that implement the Open Service Broker API, which can deliver services to applications running within cloud native platforms such as Cloud Foundry, Kubernetes and OpenShift.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "reference": {
                "href": "https://docs.spring.io/spring-cloud-open-service-broker/docs/current/reference/html5/"
              },
              "guide": {
                "href": "https://github.com/spring-cloud-samples/bookstore-service-broker",
                "title": "Using Spring Cloud Open Service Broker"
              }
            }
          }
        ]
      },
      {
        "name": "Spring Cloud Config",
        "values": [
          {
            "id": "cloud-config-client",
            "name": "Config Client",
            "description": "Client that connects to a Spring Cloud Config Server to fetch the application's configuration."
          },
          {
            "id": "cloud-config-server",
            "name": "Config Server",
            "description": "Central management for configuration via Git, SVN, or HashiCorp Vault.",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/centralized-configuration/",
                "title": "Centralized Configuration"
              }
            }
          },
          {
            "id": "cloud-starter-vault-config",
            "name": "Vault Configuration",
            "description": "Provides client-side support for externalized configuration in a distributed system. Using HashiCorp's Vault you have a central place to manage external secret properties for applications across all environments."
          },
          {
            "id": "cloud-starter-zookeeper-config",
            "name": "Apache Zookeeper Configuration",
            "description": "Enable and configure common patterns inside your application and build large distributed systems with Apache Zookeeper based components. The provided patterns include Service Discovery and Configuration."
          },
          {
            "id": "cloud-starter-consul-config",
            "name": "Consul Configuration",
            "description": "Enable and configure the common patterns inside your application and build large distributed systems with Hashicorp’s Consul. The patterns provided include Service Discovery, Distributed Configuration and Control Bus."
          }
        ]
      },
      {
        "name": "Spring Cloud Discovery",
        "values": [
          {
            "id": "cloud-eureka",
            "name": "Eureka Discovery Client",
            "description": "a REST based service for locating services for the purpose of load balancing and failover of middle-tier servers."
          },
          {
            "id": "cloud-eureka-server",
            "name": "Eureka Server",
            "description": "spring-cloud-netflix Eureka Server.",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/service-registration-and-discovery/",
                "title": "Service Registration and Discovery"
              }
            }
          },
          {
            "id": "cloud-starter-zookeeper-discovery",
            "name": "Apache Zookeeper Discovery",
            "description": "Service discovery with Apache Zookeeper."
          },
          {
            "id": "cloud-cloudfoundry-discovery",
            "name": "Cloud Foundry Discovery",
            "description": "Service discovery with Cloud Foundry."
          },
          {
            "id": "cloud-starter-consul-discovery",
            "name": "Consul Discovery",
            "description": "Service discovery with Hashicorp Consul."
          }
        ]
      },
      {
        "name": "Spring Cloud Routing",
        "values": [
          {
            "id": "cloud-zuul",
            "name": "Zuul [Maintenance]",
            "description": "Intelligent and programmable routing with Spring Cloud Netflix Zuul.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/routing-and-filtering/",
                "title": "Routing and Filtering"
              }
            }
          },
          {
            "id": "cloud-gateway",
            "name": "Gateway",
            "description": "Provides a simple, yet effective way to route to APIs and provide cross cutting concerns to them such as security, monitoring/metrics, and resiliency.",
            "_links": {
              "guide": {
                "href": "https://github.com/spring-cloud-samples/spring-cloud-gateway-sample",
                "title": "Using Spring Cloud Gateway"
              }
            }
          },
          {
            "id": "cloud-ribbon",
            "name": "Ribbon [Maintenance]",
            "description": "Client-side load-balancing with Spring Cloud Netflix and Ribbon.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/client-side-load-balancing/",
                "title": "Client-side load-balancing with Ribbon and Spring Cloud"
              }
            }
          },
          {
            "id": "cloud-feign",
            "name": "OpenFeign",
            "description": "Declarative REST Client. OpenFeign creates a dynamic implementation of an interface decorated with JAX-RS or Spring MVC annotations."
          },
          {
            "id": "cloud-loadbalancer",
            "name": "Cloud LoadBalancer",
            "description": "Client-side load-balancing with Spring Cloud LoadBalancer.",
            "versionRange": "2.2.0.M4",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/spring-cloud-loadbalancer/",
                "title": "Client-side load-balancing with Spring Cloud LoadBalancer"
              },
              "reference": {
                "href": "https://cloud.spring.io/spring-cloud-static/spring-cloud-commons/current/reference/html/#spring-cloud-loadbalancer"
              }
            }
          }
        ]
      },
      {
        "name": "Spring Cloud Circuit Breaker",
        "values": [
          {
            "id": "cloud-resilience4j",
            "name": "Resilience4J",
            "description": "Spring Cloud Circuit breaker with Resilience4j as the underlying implementation.",
            "versionRange": "2.2.0.RELEASE",
            "_links": {
              "reference": {
                "href": "https://cloud.spring.io/spring-cloud-static/spring-cloud-circuitbreaker/current/reference/html"
              }
            }
          },
          {
            "id": "cloud-hystrix",
            "name": "Hystrix [Maintenance]",
            "description": "Circuit breaker with Spring Cloud Netflix Hystrix.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "guide": {
                "href": "https://spring.io/guides/gs/circuit-breaker/",
                "title": "Circuit Breaker"
              }
            }
          },
          {
            "id": "cloud-hystrix-dashboard",
            "name": "Hystrix Dashboard [Maintenance]",
            "description": "Circuit breaker dashboard with Spring Cloud Netflix Hystrix.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)"
          },
          {
            "id": "cloud-turbine",
            "name": "Turbine [Maintenance]",
            "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)"
          },
          {
            "id": "cloud-turbine-stream",
            "name": "Turbine Stream [Maintenance]",
            "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Apache Kafka or RabbitMQ).",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)"
          }
        ]
      },
      {
        "name": "Spring Cloud Tracing",
        "values": [
          {
            "id": "cloud-starter-sleuth",
            "name": "Sleuth",
            "description": "Distributed tracing via logs with Spring Cloud Sleuth."
          },
          {
            "id": "cloud-starter-zipkin",
            "name": "Zipkin Client",
            "description": "Distributed tracing with an existing Zipkin installation and Spring Cloud Sleuth Zipkin."
          }
        ]
      },
      {
        "name": "Spring Cloud Messaging",
        "values": [
          {
            "id": "cloud-bus",
            "name": "Cloud Bus",
            "description": "Links nodes of a distributed system with a lightweight message broker which can used to broadcast state changes or other management instructions (requires a binder, e.g. Apache Kafka or RabbitMQ)."
          },
          {
            "id": "cloud-stream",
            "name": "Cloud Stream",
            "description": "Framework for building highly scalable event-driven microservices connected with shared messaging systems (requires a binder, e.g. Apache Kafka, RabbitMQ or Solace PubSub+)."
          },
          {
            "id": "reactive-cloud-stream",
            "name": "Reactive Cloud Stream",
            "description": "Reactive messaging microservices with Spring Cloud Stream (requires a binder, e.g. Apache Kafka or RabbitMQ).",
            "versionRange": "[2.0.0.RELEASE,2.2.0.M1)"
          }
        ]
      },
      {
        "name": "Pivotal Cloud Foundry",
        "values": [
          {
            "id": "scs-config-client",
            "name": "Config Client (PCF)",
            "description": "Config client on Pivotal Cloud Foundry.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "reference": {
                "href": "https://docs.pivotal.io/spring-cloud-services/"
              }
            }
          },
          {
            "id": "scs-service-registry",
            "name": "Service Registry (PCF)",
            "description": "Eureka service discovery client on Pivotal Cloud Foundry.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "reference": {
                "href": "https://docs.pivotal.io/spring-cloud-services/"
              }
            }
          },
          {
            "id": "scs-circuit-breaker",
            "name": "Circuit Breaker (PCF)",
            "description": "Hystrix circuit breaker client on Pivotal Cloud Foundry.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "reference": {
                "href": "https://docs.pivotal.io/spring-cloud-services/"
              }
            }
          }
        ]
      },
      {
        "name": "Amazon Web Services",
        "values": [
          {
            "id": "cloud-aws",
            "name": "AWS Core",
            "description": "AWS native services from Spring Cloud for AWS.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)"
          },
          {
            "id": "cloud-aws-jdbc",
            "name": "AWS RDS",
            "description": "Relational databases on AWS with RDS and Spring Cloud AWS JDBC.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)"
          },
          {
            "id": "cloud-aws-messaging",
            "name": "AWS Simple Queue Service",
            "description": "Messaging on AWS with SQS and Spring Cloud AWS Messaging.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)"
          }
        ]
      },
      {
        "name": "Microsoft Azure",
        "values": [
          {
            "id": "azure-support",
            "name": "Azure Support",
            "description": "Auto-configuration for Azure Services (Service Bus, Storage, Active Directory, Cosmos DB, Key Vault, and more).",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "reference": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot"
              }
            }
          },
          {
            "id": "azure-active-directory",
            "name": "Azure Active Directory",
            "description": "Spring Security integration with Azure Active Directory for authentication.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "guide": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-samples/azure-active-directory-spring-boot-sample",
                "title": "Using Active Directory"
              },
              "reference": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-starters/azure-active-directory-spring-boot-starter"
              }
            }
          },
          {
            "id": "azure-keyvault-secrets",
            "name": "Azure Key Vault",
            "description": "Manage application secrets and keys.",
            "versionRange": "[2.0.0.RELEASE,2.4.0.M1)",
            "_links": {
              "guide": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-samples/azure-keyvault-secrets-spring-boot-sample",
                "title": "Using Key Vault"
              },
              "reference": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-starters/azure-keyvault-secrets-spring-boot-starter"
              }
            }
          },
          {
            "id": "azure-storage",
            "name": "Azure Storage",
            "description": "Azure Storage service integration.",
            "versionRange": "[2.0.0.RELEASE,2.3.0.M1)",
            "_links": {
              "guide": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-samples/azure-storage-spring-boot-sample",
                "title": "Using Azure Storage"
              },
              "reference": {
                "href": "https://github.com/Microsoft/azure-spring-boot/tree/master/azure-spring-boot-starters/azure-storage-spring-boot-starter"
              }
            }
          }
        ]
      },
      {
        "name": "Google Cloud Platform",
        "values": [
          {
            "id": "cloud-gcp",
            "name": "GCP Support",
            "description": "Contains auto-configuration support for every Spring Cloud GCP integration. Most of the auto-configuration code is only enabled if other dependencies are added to the classpath.",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "reference": {
                "href": "https://cloud.spring.io/spring-cloud-gcp/reference/html/"
              },
              "guide": {
                "href": "https://github.com/GoogleCloudPlatform/spring-cloud-gcp/tree/master/spring-cloud-gcp-samples",
                "title": "GCP Samples"
              }
            }
          },
          {
            "id": "cloud-gcp-pubsub",
            "name": "GCP Messaging",
            "description": "Adds the GCP Support entry and all the required dependencies so that the Google Cloud Pub/Sub integration work out of the box.",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "reference": {
                "href": "https://cloud.spring.io/spring-cloud-gcp/reference/html/#spring-integration"
              },
              "guide": {
                "href": "https://github.com/GoogleCloudPlatform/spring-cloud-gcp/tree/master/spring-cloud-gcp-samples/spring-cloud-gcp-pubsub-sample",
                "title": "GCP Pub/Sub Sample"
              }
            }
          },
          {
            "id": "cloud-gcp-storage",
            "name": "GCP Storage",
            "description": "Adds the GCP Support entry and all the required dependencies so that the Google Cloud Storage integration work out of the box.",
            "versionRange": "[2.0.0.RELEASE,2.5.0.M1)",
            "_links": {
              "reference": {
                "href": "https://cloud.spring.io/spring-cloud-gcp/reference/html/#spring-resources"
              },
              "guide": {
                "href": "https://github.com/GoogleCloudPlatform/spring-cloud-gcp/tree/master/spring-cloud-gcp-samples/spring-cloud-gcp-storage-resource-sample",
                "title": "GCP Storage Sample"
              }
            }
          }
        ]
      }
    ]
  },
  "type": {
    "type": "action",
    "default": "maven-project",
    "values": [
      {
        "id": "maven-project",
        "name": "Maven Project",
        "description": "Generate a Maven based project archive.",
        "action": "/starter.zip",
        "tags": {
          "format": "project",
          "build": "maven"
        }
      },
      {
        "id": "maven-build",
        "name": "Maven POM",
        "description": "Generate a Maven pom.xml.",
        "action": "/pom.xml",
        "tags": {
          "format": "build",
          "build": "maven"
        }
      },
      {
        "id": "gradle-project",
        "name": "Gradle Project",
        "description": "Generate a Gradle based project archive.",
        "action": "/starter.zip",
        "tags": {
          "format": "project",
          "build": "gradle"
        }
      },
      {
        "id": "gradle-build",
        "name": "Gradle Config",
        "description": "Generate a Gradle build file.",
        "action": "/build.gradle",
        "tags": {
          "build": "gradle",
          "format": "build"
        }
      }
    ]
  },
  "architecture": {
    "type": "single-select",
    "default": "none",
    "values": [
      {
        "id": "none",
        "name": "None"
      },
      {
        "id": "mvc",
        "name": "MVC",
        "dependOn": [
          "web",
          "thymeleaf",
          "h2",
          "mybatis"
        ]
      },
      {
        "id": "layered",
        "name": "分层架构",
        "dependOn": [
          "lombok",
          "mybatis",
          "h2",
          "web",
          "arthas"
        ]
      },
      {
        "id": "cola",
        "name": "COLA",
        "dependOn": [
          "lombok",
          "web",
          "mysql",
          "mybatis",
          "validation",
          "cola-core",
          "cola-common",
          "junit",
          "commons-lang3",
          "fastjson",
          "arthas"
        ]
      }
    ]
  },
  "democodes": {
    "type": "hierarchical-multi-select",
    "values": [
      {
        "id": "gson",
        "name": "Gson 示例",
        "description": "本案例是一个简单的Gson示例;",
        "dependencies": [
          "web",
          "gson"
        ],
        "related": [
          "gson"
        ]
      },
      {
        "id": "jackson",
        "name": "Jackson 示例",
        "description": "本案例是一个简单的Jackson示例。",
        "dependencies": [
          "web",
          "commons-io"
        ],
        "related": [
          "web"
        ]
      },
      {
        "id": "thymeleaf",
        "name": "Thymeleaf 示例",
        "description": "本案例是一个简单的Thymeleaf页面；",
        "dependencies": [
          "thymeleaf",
          "web"
        ],
        "related": [
          "thymeleaf"
        ]
      },
      {
        "id": "freemarker",
        "name": "Freemarker 示例",
        "description": "本案例是一个简单的Freemarker页面；",
        "dependencies": [
          "freemarker",
          "web"
        ],
        "related": [
          "freemarker"
        ]
      },
      {
        "id": "dubboprovider",
        "name": "Dubbo 服务调用提供者",
        "description": "本案例通过Dubbo对外暴露服务，并使用nacos完成服务的注册工作；",
        "dependencies": [
          "sca-nacos-discovery",
          "web"
        ],
        "related": [
          "sca-dubbo"
        ]
      },
      {
        "id": "dubboconsumer",
        "name": "Dubbo 服务调用消费者",
        "description": "本案例消费“Dubbo 服务调用提供者”暴露的服务，并使用nacos完成服务的发现工作；",
        "dependencies": [
          "sca-nacos-discovery",
          "web"
        ],
        "related": [
          "sca-dubbo"
        ]
      },
      {
        "id": "nacosdiscoveryprovider",
        "name": "Nacos 服务提供者示例",
        "description": "该案例使用nacos discovery完成服务注册。并提供基于http协议的EchoService服务实现。",
        "dependencies": [
          "web"
        ],
        "related": [
          "sca-nacos-discovery"
        ]
      },
      {
        "id": "nacosdiscoveryconsumer",
        "name": "Nacos 服务消费者示例",
        "description": "该案例使用nacos discovery完成对“Nacos 服务提供者示例”的发现。并使用RestTemplate、OpenFeign两种方式实现对EchoService的调用。",
        "dependencies": [
          "web",
          "cloud-feign",
          "sca-sentinel"
        ],
        "related": [
          "sca-nacos-discovery"
        ]
      },
      {
        "id": "nacosconfig",
        "name": "Nacos 分布式配置基础示例",
        "description": "该案例包含从nacos配置中心读取配置的基本用法。",
        "dependencies": [
          "web"
        ],
        "related": [
          "sca-nacos-config"
        ]
      },
      {
        "id": "sentinel",
        "name": "Sentinel 限流&熔断基础示例",
        "description": "该案例包含使用Sentinel完成web入口、Dubbo服务的限流拦截功能。由于包含针对 dubbo 调用的限流拦截能力，所以在该案例中引入了 dubbo+nacos 环境；",
        "dependencies": [
          "web",
          "sca-dubbo",
          "sca-nacos-discovery",
          "sca-sentinel-dubbo-adapter"
        ],
        "related": [
          "sca-sentinel",
          "sca-sentinel-dubbo-adapter"
        ]
      },
      {
        "id": "sentinelprovider",
        "name": "Sentinel 限流&熔断基础示例-服务提供端",
        "description": "该案例提供了 “Sentinel 限流&熔断基础示例” 中需要使用到的远程服务实现，本案例依赖 dubbo + nacos 实现服务的对外暴露&注册；",
        "dependencies": [
          "web",
          "sca-dubbo",
          "sca-nacos-discovery",
          "sca-sentinel-dubbo-adapter"
        ],
        "related": [
          "sca-sentinel",
          "sca-sentinel-dubbo-adapter"
        ]
      },
      {
        "id": "sentinelgateway",
        "name": "Sentinel 网关限流控制示例",
        "description": "这是一个引入了 sentinel-gateway 的 spring cloud gateway 应用。通过 sentinel-gateway 可以在 sentinel 控制台管理 gateway 应用的限流等功能。",
        "dependencies": [
          "web",
          "cloud-gateway",
          "sca-sentinel"
        ],
        "related": [
          "sca-sentinel-gateway",
          "cloud-gateway"
        ]
      },
      {
        "id": "seata",
        "name": "Seata 分布式事务基础示例",
        "description": "使用Seata实现分布式事务的基本使用方法。",
        "dependencies": [
          "web",
          "mysql"
        ],
        "related": [
          "sca-seata"
        ]
      },
      {
        "id": "oss",
        "name": "OSS 文件上传&下载 基础案例",
        "description": "OSS 文件上传&下载",
        "dependencies": [
          "web"
        ],
        "related": [
          "sca-oss"
        ]
      },
      {
        "id": "sms",
        "name": "SMS 短信发送模块 基础案例",
        "description": "SMS短信发送组件基本使用案例。依赖“web”模块",
        "dependencies": [
          "web"
        ],
        "related": [
          "sca-sms"
        ]
      },
      {
        "id": "schedulerx",
        "name": "SchedulerX 分布式调度 基础案例",
        "description": "SchedulerX 分布式调度的基本用法。本案例依赖“web”模块。",
        "dependencies": [
          "web"
        ],
        "related": [
          "sca-schedulerx"
        ]
      },
      {
        "id": "rds",
        "name": "Alibaba Cloud RDS MySQL 基础案例",
        "description": "阿里云 RDS 模块基本用法。本案例依赖“web”模块、“mysql”模块。",
        "dependencies": [
          "web",
          "mysql"
        ],
        "related": [
          "sca-rds"
        ]
      },
      {
        "id": "redis",
        "name": "Alibaba Cloud Redis 基础案例",
        "description": "阿里云 Redis 模块基本用法。本案例依赖“web”、“redis”、“redis-reactive”等模块。",
        "dependencies": [
          "web",
          "mysql"
        ],
        "related": [
          "sca-redis"
        ]
      },
      {
        "id": "mybatis",
        "name": "Mybatis 基础示例",
        "description": "Mybatis 通用配置，包含 Mapper 接口、 mapping 配置文件等。",
        "dependencies": [
          "web",
          "h2"
        ],
        "related": [
          "mybatis"
        ]
      },
      {
        "id": "web",
        "name": "Web 基础示例",
        "description": "Spring MVC 的示例，包含普通请求、路径参数匹配、静态资源访问等功能。",
        "dependencies": [
          "web"
        ],
        "related": [
          "web"
        ]
      },
      {
        "id": "cloudshell",
        "name": "Cloud Shell 使用说明",
        "description": "Cloud Shell 使用说明",
        "dependencies": [],
        "related": []
      }
    ]
  },
  "packaging": {
    "type": "single-select",
    "default": "jar",
    "values": [
      {
        "id": "jar",
        "name": "Jar"
      },
      {
        "id": "war",
        "name": "War"
      }
    ]
  },
  "javaVersion": {
    "type": "single-select",
    "default": "1.8",
    "values": [
      {
        "id": "15",
        "name": "15"
      },
      {
        "id": "11",
        "name": "11"
      },
      {
        "id": "1.8",
        "name": "8"
      }
    ]
  },
  "language": {
    "type": "single-select",
    "default": "java",
    "values": [
      {
        "id": "java",
        "name": "Java"
      },
      {
        "id": "kotlin",
        "name": "Kotlin"
      },
      {
        "id": "groovy",
        "name": "Groovy"
      }
    ]
  },
  "bootVersion": {
    "type": "single-select",
    "default": "2.3.7.RELEASE",
    "values": [
      {
        "id": "2.4.1",
        "name": "2.4.1"
      },
      {
        "id": "2.3.7.RELEASE",
        "name": "2.3.7.RELEASE"
      },
      {
        "id": "2.1.18.RELEASE",
        "name": "2.1.18.RELEASE"
      },
      {
        "id": "2.1.17.RELEASE",
        "name": "2.1.17.RELEASE"
      }
    ]
  },
  "groupId": {
    "type": "text",
    "default": "com.example"
  },
  "artifactId": {
    "type": "text",
    "default": "demo"
  },
  "version": {
    "type": "text",
    "default": "0.0.1-SNAPSHOT"
  },
  "name": {
    "type": "text",
    "default": "demo"
  },
  "description": {
    "type": "text",
    "default": "Demo project for Spring Boot"
  },
  "packageName": {
    "type": "text",
    "default": "com.example.demo"
  }
}